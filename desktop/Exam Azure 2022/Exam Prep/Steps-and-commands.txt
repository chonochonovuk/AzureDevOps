Steps and commands:

1.Create Resource Group - Use already existing ChonoResGroup
2.Create ACR - use already created
3.Database and database server - use already created password is Wish125beak255
4.Create AKS steps:
a) Change the size of the nodes to Standard B2s
b) Set the number of nodes to 1
c) Switch to Integrations tab
d) Select the registry created earlier in the Container registry drop-down list
e) Copy the connaction SQL string and paste it to Dockerfile related index.php, !!!! WRITE INTO YOUR PASSWORD !!!
    but before that check the Dockerfile itself which will be in /docker directory probably - save
f) Build the image with ACR Cli
 - by using terminal navigate to directory where Dockerfile
 - use this command, but check if there is a image name in kubernetes manifest:

   az acr build --registry chonoTestAcr --image chonochonov/azureexam:v1 .

 - check registry to comfirm image is there
 - take photos of both CLI and registry

g) Edit deployment.yaml and add image name by coping from azure portal and Save it.
k) Check service.yaml
l) To get and store the credentials needed for communication with the cluster, you must execute:

   az aks get-credentials --resource-group ChonoResGroup --name <cluster-name>

m) Now, you can use the kubectl tool to manage the cluster. Test that it is working:

   kubectl cluster-info

n) Navigate to directory where manifest files are and Deploy both the service and application simultaneously:

   kubectl apply -f service.yaml -f deployment.yaml

o) We can check periodically how it is going:

   kubectl get svc,pod

p) Get the load balancer IP address and test the application

