trigger:
- main

resources:
- repo: self

variables:
  imageRepository: 'chonochonovukazuredevops'
  containerRegistry: 'azurechonoacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - deployment: Build
    displayName: Build
    environment: 'k8sdev.default'  
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
           - task: Docker@2
             displayName: Build and push an image to container registry
             inputs:
               containerRegistry: 'test-pipeline'
               repository: '$(imageRepository)'
               command: 'buildAndPush'
               Dockerfile: '$(dockerfilePath)'
               tags: |
                 $(tag)
                 latest
           - task: PublishPipelineArtifact@1
             inputs:
               targetPath: '$(Pipeline.Workspace)/s/yaml'
               artifact: 'manifests'
               publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: chonoakstoactauth
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecret)'
          dockerRegistryEndpoint: 'test-pipeline'
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          namespace: 'default'
          manifests: 
            $(Pipeline.Workspace)/manifests/application.yaml
